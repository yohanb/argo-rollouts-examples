---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRYjdyUXlqTE1SVjljRTZKbktYNnVaekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNekE1TVRVeE5UQTJNamhhRncweU5EQTVNVFF4TlRBMk1qaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdXZZWFhsbXZLYmUxdkVpL0tOakl5ZlRIUytHMWVYcm5KY1BMU1BHcitOY291QkI0U0hEVAptYW5ZenhKODM2ZGttbHAwVU5iQStWZnhvNEdMak5jcnNFUlBoTmxWMDl2ZVg0TnNMQ0R1ay9zUjZYN0JybmRMCk1zdVlYRzlrK25jZEVheEJnVkxyc0ZIRHFRMitKWUs0K3lzVEZXKytDZkZNUkRIS1NUa0ltUGNEZnNkZlpiUnQKOHBWMFVTdTZOU2g5bEwraitJTUNFMU5zbzVVVEVQTWtXYTJWaTdwbmtIOG5vSXo0SlExK0dObHpWcnlHaWxuMQpnQUZiOGxYc0w3TDgyaURyM0pWWGMzRys5WVplcEI0bTZnZWtlYzY4RlYvb0tDTFN0RTlyOElkZzVEbE9TUFBrCm9MTzJmZSt2LzlsdFp1VnZOek1lZFR2RGtBQ0xWYktZMXdJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUpEN2tVdmR5ZTQ2alRJcUNacUtiTzZ6bjNnb3padkFMMG5TNk5abTRHbmQKUnQzUzIvWE00T3lUTlNXWXo1ZzB5WU1ZUTlXMmQ3QlpXWGVlNWJUbWh0YUlOZkppUE9wa2lxcXRJWjVra3hYcwppa3ZPOVVKSm1YdXZoaWNkNGNKdlQ5Z0E0cUwrNkljWGtkYWpxbUs5MGl6RGVHeWY1cTFRRFhFS2VXcU84clhqCmJIN0gxRk9zbXdmUXd0UzlURnYrWG5HT3VXcnE4aEkzZU9FVlA5Ykk5QWc1aVF4MDZ3Q2R5MWhDYzJmNVU5dXAKYW1aa0JqbHl1Wnc1WlR0SUl2NnFlb0ZVSk1BdDJMZzkweTUzdFF1YVhnWCtmNUtzbVEyRldWTmdmTXN2SFJKbgoveHp0dEE1NkIrYkZMY1IvTi9VNlY1Nk5OUUR0YjlEN1R0L1Q1K0w1VWNnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdXZZWFhsbXZLYmUxdkVpL0tOakl5ZlRIUytHMWVYcm5KY1BMU1BHcitOY291QkI0ClNIRFRtYW5ZenhKODM2ZGttbHAwVU5iQStWZnhvNEdMak5jcnNFUlBoTmxWMDl2ZVg0TnNMQ0R1ay9zUjZYN0IKcm5kTE1zdVlYRzlrK25jZEVheEJnVkxyc0ZIRHFRMitKWUs0K3lzVEZXKytDZkZNUkRIS1NUa0ltUGNEZnNkZgpaYlJ0OHBWMFVTdTZOU2g5bEwraitJTUNFMU5zbzVVVEVQTWtXYTJWaTdwbmtIOG5vSXo0SlExK0dObHpWcnlHCmlsbjFnQUZiOGxYc0w3TDgyaURyM0pWWGMzRys5WVplcEI0bTZnZWtlYzY4RlYvb0tDTFN0RTlyOElkZzVEbE8KU1BQa29MTzJmZSt2LzlsdFp1VnZOek1lZFR2RGtBQ0xWYktZMXdJREFRQUJBb0lCQUhYUU1iV2c2a0p0bzdYOApXWW1SNGlWeGZFMFM5RnFTMmlud0VaL3J1cVRhWUt4c3BIOXhxY1hCUkFCbzlBdXozaTl1SkxIMFFqSmQrc1ZBCkV3SXpiVEpzT1hmTHhNdjJWMUQwN2l0NHJSN1BMZUJub2dFZzUyQWc3K2Yvd2pBYTgxUjVxZVdtclNLMHc0azYKUWNJOWQvZStrdzRGRmtvSnBqZXE4SC9uMHNVZ2Z3cjU1dVR5SmVJWnJSdWVHU1lvNjBHbmIxNWxqSk9HU3h3awp3V1RCQ3luTCtzWEE4c21KUzdGOEJvT0NjUXlhdTd0VG8wcVYvalNYZDlLaXZBWlErc3Juc2NrU3d1RDM2djFFCnZ3bkVIN2xseW9ialpsN1VPUHdaTmE4d0FFVmFiZ1JQbzhHd0t0YmM4WkczYXNDNjRTWTBBd2xHcE9Wd0Q4RnYKbWR2SFNBRUNnWUVBenZOQ1p3L2Y5eXRQYWxLLzJ2dm96b25wc2tjZENDZk9PelZUY2dORkZmWFpYT0xpVC82WAp1bVl6a1NuWjJ6eEZlclJjWVVIMVlGb3E5dEZ5OXR4U3o2c3hJcFFrQnI1ajBEbCtxekN1WlFtTjROVXhwdGxZCnR3b3hZdmY0QTlHWTF1Q1RWam1vM2ZzcXY2aytVSkM3Vm5VeUJoakxZUVJOdHVkamZNc2FUdGNDZ1lFQTUwWC8KNnphWCs1NUFtZkttQXl6alNaQks2UGROb2kvd0VkYXlCRi9aWDlBVUhaSitKK1VLM1RMMlFnYlArdVFrVngzaQpvOU1kZWhlb0V4MzRPb2tXczIwaUJIYitHcEYwcVAxM2ZUVTBqNzVaQ09lY2Q3aHBGZEMwU3RtZ2NlVHJLN3pTCmljeCtxTHBLUkRBNEM4a3dadHBjZFRrc2dMUk9MNmtUZ2oyU3hnRUNnWUJmT29icXY5NVNjV2FJeVcwcFNsUFYKZnBiQUI0TXZkb21xcXg0cno1OWh2SkI1OHBrck1EOEhjZkgyc1doalByZkYvK3FtZ21CMEp1bXdTNjc0TTJnVAowWFc1c0t0blF3TFJGVFBaZUh3M1dBOG1UMVFhcjlibjIxUGdjN1IzcFdJTU5xajF1M0NlUE81dDVXWWNVbzB4CitwbTdQbnVQdUJnK3V2a0h1cm52WHdLQmdRQzArNng0RHpNRWJ5VXkxQlppS2NCOEV2VHNOb3VFUG10cUtrOEkKNlZFY2o2TU9PVk9NT01zMXF1blhaYWxnTnlUUkg4djZVLzJmUzkvMWhlQjVQa3FMZ3YyNTdMeVJZZjZmT0N0SAp5bGtsbTlubEJBc0lEVUgvRm1IZ3FVbkxsMDhKM1N3Tk5nQndYY2c4Y0ZlTHNaZTFCWENSTTNyR0JWT2lMSGZkCjFmMkVBUUtCZ1FDdUpUL01lRExLZlBNeVcxbzNiSG9TQlhFTSs2VUdHVXk5dk1uZVdMcm5KZGNkWGlkYmFyanMKQmhTa3FBR0FwSWdxb3RmYzB3UWdlY1dORmdBTUpRZmN0RGx3UWJKQ3ZYY0RRRDQwSHdqREU3d0d1MVdOMk5zVApXSi9hUWdFR2ZGN3M0SGpIV0JNQVBaY0w2TW1CUGNlWmUwck9PdFVTSTgrR2RESXBGNHNCOHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRYjdyUXlqTE1SVjljRTZKbktYNnVaekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNekE1TVRVeE5UQTJNamhhRncweU5EQTVNVFF4TlRBMk1qaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdXZZWFhsbXZLYmUxdkVpL0tOakl5ZlRIUytHMWVYcm5KY1BMU1BHcitOY291QkI0U0hEVAptYW5ZenhKODM2ZGttbHAwVU5iQStWZnhvNEdMak5jcnNFUlBoTmxWMDl2ZVg0TnNMQ0R1ay9zUjZYN0JybmRMCk1zdVlYRzlrK25jZEVheEJnVkxyc0ZIRHFRMitKWUs0K3lzVEZXKytDZkZNUkRIS1NUa0ltUGNEZnNkZlpiUnQKOHBWMFVTdTZOU2g5bEwraitJTUNFMU5zbzVVVEVQTWtXYTJWaTdwbmtIOG5vSXo0SlExK0dObHpWcnlHaWxuMQpnQUZiOGxYc0w3TDgyaURyM0pWWGMzRys5WVplcEI0bTZnZWtlYzY4RlYvb0tDTFN0RTlyOElkZzVEbE9TUFBrCm9MTzJmZSt2LzlsdFp1VnZOek1lZFR2RGtBQ0xWYktZMXdJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUpEN2tVdmR5ZTQ2alRJcUNacUtiTzZ6bjNnb3padkFMMG5TNk5abTRHbmQKUnQzUzIvWE00T3lUTlNXWXo1ZzB5WU1ZUTlXMmQ3QlpXWGVlNWJUbWh0YUlOZkppUE9wa2lxcXRJWjVra3hYcwppa3ZPOVVKSm1YdXZoaWNkNGNKdlQ5Z0E0cUwrNkljWGtkYWpxbUs5MGl6RGVHeWY1cTFRRFhFS2VXcU84clhqCmJIN0gxRk9zbXdmUXd0UzlURnYrWG5HT3VXcnE4aEkzZU9FVlA5Ykk5QWc1aVF4MDZ3Q2R5MWhDYzJmNVU5dXAKYW1aa0JqbHl1Wnc1WlR0SUl2NnFlb0ZVSk1BdDJMZzkweTUzdFF1YVhnWCtmNUtzbVEyRldWTmdmTXN2SFJKbgoveHp0dEE1NkIrYkZMY1IvTi9VNlY1Nk5OUUR0YjlEN1R0L1Q1K0w1VWNnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRSExyZ2YvYmNtaHVvYXZlN3hia3FwakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd09URTFNVFV3TmpJNVdoY05NalF3T1RFME1UVXdOakk1V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREWUhWNmVqdlNlTFB6VXI5ajRUdnBLMVF3eFg1TndEWUhCZ21NYStybAo2TEhuZFVUL2tldGs4OVpQaTVubmpURkVGVTErUUFuY2U4cVJzN0YveDEzOSttSnZKbTFRN0txNWVKWC8rMElNCnY2S2ZZUTRIMUwrczVrbHRPZEkveHJqNFFOMGN0TXhOT25RemZwRkZpUGtCbUVxN3VxdDNmdWcxTTNNLy90NlIKRHFPT3RoOUtZMjF3bmxmZnFicitBUFhzcUVORHdJdXlxdS9DY044eGg5SE5KM2VUVW9LUElXRFBFbmVpeXNmMQp2VElreHU4cUlxRFNDSHIrRjhjTnZOSFlvY3R6MmFYTStkT1QxZ2RGUHExTzN4WGxvdGkveFQ0M25lKyswK3lvCko3eVVmUG4rclcwaGo5cXlvMFk0WFd0UTcva2dKNnAvZ09BbGRJMmhHbE1oQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBWXJwWTdWNmhDdTV2VWkySCtIWVNhN29ESUoKWDA4TFc1ZHNtOWdzVElVbktBMUVwalBXWkxtQzAwaDd0OVluUzA2YWRLQkg3QXZ3SXVkMTZjUWdBVW9hYVJxRQpGKzdKcGd6Nm81OGcxYXBXaFREdXZRQ05hd3NBV1BpdFFkT3hSUzMrVm1SK2JJRS81Z2M2dEtiWTdGUGlQS2h5CjkraTdWL2J5YVd2NWFEZ0xjQU4ya2ZYT1Z2dGtRRFcraG9WVWd6bEpuVXQwc0JpQ3VuWkpKNG1BWk5OMm5GNkgKYzY5a1N6c21VNGw0YlpHQ0xLUTVNL28zUkJVbWhhSHhOUWF4Nk42eitzMXBDWjEzZCt4Nmd1N0lhWmQwVlpsSgpZT09RSDdQT3Y3RUxJTjVqMDBBYVV1YlYvVkpYTjJHNHVIRHlPMU1zbGhjK1I4OXNjaVRxcU9VZUZoYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzJCMWVubzcwbml6ODFLL1krRTc2U3RVTU1WK1RjQTJCd1lKakd2cTVlaXg1M1ZFCi81SHJaUFBXVDR1WjU0MHhSQlZOZmtBSjNIdktrYk94ZjhkZC9mcGlieVp0VU95cXVYaVYvL3RDREwraW4yRU8KQjlTL3JPWkpiVG5TUDhhNCtFRGRITFRNVFRwME0zNlJSWWo1QVpoS3U3cXJkMzdvTlROelAvN2VrUTZqanJZZgpTbU50Y0o1WDM2bTYvZ0QxN0toRFE4Q0xzcXJ2d25EZk1ZZlJ6U2QzazFLQ2p5Rmd6eEozb3NySDliMHlKTWJ2CktpS2cwZ2g2L2hmSERielIyS0hMYzltbHpQblRrOVlIUlQ2dFR0OFY1YUxZdjhVK041M3Z2dFBzcUNlOGxIejUKL3ExdElZL2FzcU5HT0YxclVPLzVJQ2VxZjREZ0pYU05vUnBUSVFJREFRQUJBb0lCQUg3WWdFMDlVTnVML0NFTQo1eTk4aXY0T1lJR3RweHZwbitvZGRGT1R1UlQ5WjR1RGFvR1hCa0lyd1VjeHRvRkwvT0ZjQjB6aFhNV21KVlZGCldnZEFzL2h4K0RoN3RWdGwzRTNBU1hyQmNSZC96NkEwVGZ5dGxxZzFkeFNRQnIzYlVqbnpPdHNwVXI4TkpXWk4KVlJuVkhQMTVGNFFjWkxpWFQwRkRIeDg4Wk5tOWlZUUI5Um9JZEZMbkhnaTV3N1hQSklGRHZBNmMxaEV4UnJUMgpRL3FoZWNVWkhVOFhuMysxbXVSL0loMUdoVFc1QlBXRXpzVHJNbGtXNVJONjA4aDNBa244ajJlZG54WFhEdnplCkJUK3M5emszVzAzWWw1Tk85QTUrS3d2TCsyZUNkMGZHTlVIbHR6N1dwdy9naGRaRUowc2Z6RnJEMVlmNkhkUUwKNGFhZ0JLVUNnWUVBN0MzSCtuYnZ3Rzg4UjJ6RzRYQ1BJNUNDTmhCQ1dLOXFvTElkZ2RDOENIQmxIbTh2VDVHWQo5OGE0bFVxN3dQL2FJMnZsSlM5SGJqSWpZSnhuT01NUE5ZN3UvRVhTSktMajhkd0twd2R3RUU1K054WW9JWGphCm5wd01SRHdNNllDbkhlbWpHWlp2clUvSGwzakxKcGxmM2kwdVBkM0UzOXZ0N2dUbVdVSUF3OU1DZ1lFQTA4WVAKY0dOd0J4RE5DaVo5R0RZOXNyWFJpTmlXd3N3TUFkaHJiT3RxWk1Ga3RhT1dYd3EyN3RkTnZya3BwYzhoK0FyYwpCZnFndUl2VUFMNGQvWFBZVGtQRjVjaDRGVE1yYnlhREFHeEtQS0JwQnBXK3FLVXY4MUhqYzBTWWdrVVpURkVjClZHVDViNkNCeW5VdEpVMVBLYnpsZytwUjVTclJMVFdKZnRMaW1Mc0NnWUVBcURPS29wUWw5M1RCQjFVdTVzdFYKQmMwYkR3blJWbnZIZ3A2WGFTYVJZNms0T3M2UWNTaU9PcGhxU05pcWtxOGtXZW16amlIM3kwRWw5TjR1blR3KwpEclMyK3k5MmsrVDJWZitTRHBhN2RzR1FIZ2RIbVY4S3c3NzY5WFdXOUkxTmQzNDNURGZaWFNMZVVNQVVYbThJCjJhQnZ1RnZDcEhOckpnS1RVcW94QlVVQ2dZQmlxMnB3Ry9TTFpqbVNYQ0oyMEhib3VDd2JqWWFZMWtkVjZNY00KcFpjWndMMnluN2lsS2JIWUVIckp2UzM1Y2t2S2JRemN3RXg0RDdaRWJsQTgwZWZiZDFwU1dKZ1NrSmZSSHVsMApuZi9zeFhTSnUrVnNZQ0s2Uk5JcjE2OFRLeXpCVVIxWStQNzdFcGJHaE5mM0JGRTVDaWtKMEhnOXhUaFd6eFgwCkFEL1Jsd0tCZ0MvSVF4L0Z2dEo1eXBZeG15Zk5sQ0FTYzNxYjNYc2hvY29zUXdoMm9ReEVET2w2bUxRQXQzSWwKQjNoVi9hd0wyT1p1aG05a3FWSDNlMFVDbFg1VU9adFNpTk43d0VRVmcwZlE3L0M3VFpLK2Jsdlc0bmFzY1RYbApOYjRPVm5VU1c1NzQ2S2tSN0VXVGk5NjFXaDY1elBCWERQSVNWSEZQb3d4T1VmMm5DRzJVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRSExyZ2YvYmNtaHVvYXZlN3hia3FwakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd09URTFNVFV3TmpJNVdoY05NalF3T1RFME1UVXdOakk1V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREWUhWNmVqdlNlTFB6VXI5ajRUdnBLMVF3eFg1TndEWUhCZ21NYStybAo2TEhuZFVUL2tldGs4OVpQaTVubmpURkVGVTErUUFuY2U4cVJzN0YveDEzOSttSnZKbTFRN0txNWVKWC8rMElNCnY2S2ZZUTRIMUwrczVrbHRPZEkveHJqNFFOMGN0TXhOT25RemZwRkZpUGtCbUVxN3VxdDNmdWcxTTNNLy90NlIKRHFPT3RoOUtZMjF3bmxmZnFicitBUFhzcUVORHdJdXlxdS9DY044eGg5SE5KM2VUVW9LUElXRFBFbmVpeXNmMQp2VElreHU4cUlxRFNDSHIrRjhjTnZOSFlvY3R6MmFYTStkT1QxZ2RGUHExTzN4WGxvdGkveFQ0M25lKyswK3lvCko3eVVmUG4rclcwaGo5cXlvMFk0WFd0UTcva2dKNnAvZ09BbGRJMmhHbE1oQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBWXJwWTdWNmhDdTV2VWkySCtIWVNhN29ESUoKWDA4TFc1ZHNtOWdzVElVbktBMUVwalBXWkxtQzAwaDd0OVluUzA2YWRLQkg3QXZ3SXVkMTZjUWdBVW9hYVJxRQpGKzdKcGd6Nm81OGcxYXBXaFREdXZRQ05hd3NBV1BpdFFkT3hSUzMrVm1SK2JJRS81Z2M2dEtiWTdGUGlQS2h5CjkraTdWL2J5YVd2NWFEZ0xjQU4ya2ZYT1Z2dGtRRFcraG9WVWd6bEpuVXQwc0JpQ3VuWkpKNG1BWk5OMm5GNkgKYzY5a1N6c21VNGw0YlpHQ0xLUTVNL28zUkJVbWhhSHhOUWF4Nk42eitzMXBDWjEzZCt4Nmd1N0lhWmQwVlpsSgpZT09RSDdQT3Y3RUxJTjVqMDBBYVV1YlYvVkpYTjJHNHVIRHlPMU1zbGhjK1I4OXNjaVRxcU9VZUZoYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRUUc2eG4yZ0k4bWthck0ydGw1MTRMakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURreE5URTFNRFl5T0ZvWERUSTBNRGt4TkRFMU1EWXlPRm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMMmNrWEFMakFDa2JNRzBrZkRVZTIrNEx3TEVjandJc0ZvcjRYYjFHbVNGTmdHQgprdDBPUUdBb2dWSUZrS0RvYjA0dlp2MWNrbWFGTXZJYkRvaWRoQmdVMmVTZm9IWGxKd0M3UytwazJzK1pINzZ5Cks4S09xZW9JdHh5TlhtNVhPYUdwTWI0dzhWT2d2My9zcG1ldW5HckpsNWpYQytNc0l1VXMwc3o3elp4S1ZwaysKLy9YaUk2U2ovQTBoWERHWTloeGxsejNwd3lQWVhlZzFFb1JXNlhUZHhHYlJuSWVVSFpleDlZbVkySjh5SUNiWgo3bXZtcFV1REZ3bFlwRWg2VlA0enI2NVBzNlBKcy9hLzhTUmFiTWN6a0lhNGZadE5OQWtDRTVoTHNsQmJUWWRTCjcxeEdFK2I1Rk1CejkxSFk4U1JrZlF4WEs1Wi9Zc1JvUk1mY1U0c0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSlpXN1VLSUlxb0IvckN3azM0amJ6WnFrOFJpWmh6WENVdmwKOTNTZGp5V21Nd2pBRWhMQzBWL2MxdXVONml6U0xzK2ZRRFVzb09nOXJKdndWTmd0TW9WUFBPbjkvQVJxUnNWRQpReGtpZURtRFZYT1M2MWxFSnJLU2ExQjJlbThZRUdjY3BqWnluU3RMdXJCbnBSK1Vha3FaUVdmNjEzaDhKL3RICmNFUWlJTWEvZyszVHFldHZRakdDOFdGNUpJR0Y3dGJyRU1NZkhPdkZsalBCZXZOYnl4S0FHS1JFb3VJeTZWT1IKV1BRVXlBWEp2bVVDYWRISWdXdkd6R3lERFZFUU5lcGIzbnJrQ1FRaTZ6WHpoMWx2MWFGMWc0NldKbVZmWlJIcAp1Q3ZTSHFyVHlRb0lQL0lFK1hVWVpWZzRsZ1VBNU9xRElpSGdvNFBSUzUvdDY2M2VWV0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdlp5UmNBdU1BS1Jzd2JTUjhOUjdiN2d2QXNSeVBBaXdXaXZoZHZVYVpJVTJBWUdTCjNRNUFZQ2lCVWdXUW9PaHZUaTltL1Z5U1pvVXk4aHNPaUoyRUdCVFo1SitnZGVVbkFMdEw2bVRhejVrZnZySXIKd282cDZnaTNISTFlYmxjNW9ha3h2akR4VTZDL2YreW1aNjZjYXNtWG1OY0w0eXdpNVN6U3pQdk5uRXBXbVQ3Lwo5ZUlqcEtQOERTRmNNWmoySEdXWFBlbkRJOWhkNkRVU2hGYnBkTjNFWnRHY2g1UWRsN0gxaVpqWW56SWdKdG51CmErYWxTNE1YQ1Zpa1NIcFUvak92cmsrem84bXo5ci94SkZwc3h6T1Focmg5bTAwMENRSVRtRXV5VUZ0TmgxTHYKWEVZVDV2a1V3SFAzVWRqeEpHUjlERmNybG45aXhHaEV4OXhUaXdJREFRQUJBb0lCQUZxcXhYalliS2ZaK0E5ZwpNdkVBQ2M1UU9scU9hVGwveGlRNEcyWHdxaUFxK3JvWnBZcUN5Qkd6RExPVjZhU253S0dZVlIwTjZRdVE0ZDJYClJvblpHRk1UbFdXWFZ2bEpEQzl6WUVmQzFrYXlwOVZlQ1VMTlNUNlowRVdjNit6RFZOR1N3REI3NHNua2NlM1AKMFhwK3Fsajk4TG1yQ3dva0RzT2JmV2w3ZHNRbWpTWmxpN0pmQVBpZTF2MHB5OEE3anpjdk5tb1FtbHFQT0FKegpnbnRSamRvR05zb1BPZ0lCTnFyVDVQSUVibVhaZWVwbHF2SlYzYVMzb09PUXU3dDJvWkZTczRVaFBTejMvZXZ2CmhwVFNrV2I1c25JaGQ3OE1ZUDg2amEwTnFFUWptdFFMUHgwVkJpYzJIOUZNSHBRcFZxRFVJRWhQZDIvZWxWWjUKTTZIUDFjRUNnWUVBNE85UHlidCt0UExGcWoyV0NTVVNFVXNUcWJxRG40cHFEdVltWVBvUVZBZm05dVpyUWI3Mwpoa2haRkpDN2hCN2NRbVl3MVpZdC9SM2ZrYTdJaFN6L3hQNVlyTERPQ3hiWmQ3YzFvVkdWZW9rWlJzdytHRUI5ClJRczRPUmhxS21oNnVoc1hHbThlUmt4UThJS2tCak5qV3NwRExwOFVjakhCVEVJVVdqM0VqcnNDZ1lFQTE4eGkKdEU4ZGw4V0dTeTF1cVB5TjAxelRuejV0a2NYMGxmL1NzVnFKS3ZSUzVMTUR5WGFtZklQckVyQjUzR291bjlENApJUlhqNjQwb0Z6RjUyOHNQYU5adnZ2R2pqcWN6UzZmUVdUc3RFUUxCRGZ0WE5ITnV2UXlnaHYvUUdwTFd6RC9MCk5GcWFRY3hLRTBtUFQwNGlYeGg2VnQ2MnRheUQ0ZE9uWndiU1NYRUNnWUJTRG50bytJRk11WlBxZXZVVStQVVMKWWZVV1lmaEtaMUF4aHp4US9HaWdmeEYrMktnZ0grNWtpbGdVN0llN3R4WmJFclNWOW1kb2cxRmY4QWN1cmkvUQpTWWxIMW1nVUc0M1I0b0FxRFgwZWFvMVNDb2hNaUpvcWFlRmswc2RJR1QxTVR6MnFZd2NFVmlyZzBvZkx5MHRmCmY1SHFuQlgxWXJsRmZJVzROZmhTcVFLQmdHa0JxVjMzeVh5YXZ4aEJ5VUV0YzQzUDg2SGZiTTJzTjdIdHhBWk0KK2NZUEVXNzd0UElKYkVYV28wSjY0VEZoOGNJT20wN3VLZlBxd2dGWEwrYkZ6bi9ES0trUFIva1lYeHVIVXhpNApkTnQ4TFppeUh1TUU4SFBKZXl0MXV6dlRDL1pqYkd2VFVwQ0Y2ZDJzdzdGaFlkUklRdStXZSsyM1BvMWF3bkNkCm55SGhBb0dCQU1adWtKczFzbk5ndllNdEJMdlBpK1grMHJ6WWRxd2JuaDlwTXd0U3NJclpyYmtqMnVUc2FpUE8KTlhkL293QWdFTndtZk1HT2NXdjdQVjl5cHZZZE9UdlQ3MThmYXhCaysvOCs5Vkw5dm9pOUcxVlAvWnp2QXVQNQprM1NhYkl6bkZTN1grb1o0N2w1bHM0ZW82TERiVDVHa1VDOWFETjNJY0FrYmEwVmI1MzBMCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRUUc2eG4yZ0k4bWthck0ydGw1MTRMakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURreE5URTFNRFl5T0ZvWERUSTBNRGt4TkRFMU1EWXlPRm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMMmNrWEFMakFDa2JNRzBrZkRVZTIrNEx3TEVjandJc0ZvcjRYYjFHbVNGTmdHQgprdDBPUUdBb2dWSUZrS0RvYjA0dlp2MWNrbWFGTXZJYkRvaWRoQmdVMmVTZm9IWGxKd0M3UytwazJzK1pINzZ5Cks4S09xZW9JdHh5TlhtNVhPYUdwTWI0dzhWT2d2My9zcG1ldW5HckpsNWpYQytNc0l1VXMwc3o3elp4S1ZwaysKLy9YaUk2U2ovQTBoWERHWTloeGxsejNwd3lQWVhlZzFFb1JXNlhUZHhHYlJuSWVVSFpleDlZbVkySjh5SUNiWgo3bXZtcFV1REZ3bFlwRWg2VlA0enI2NVBzNlBKcy9hLzhTUmFiTWN6a0lhNGZadE5OQWtDRTVoTHNsQmJUWWRTCjcxeEdFK2I1Rk1CejkxSFk4U1JrZlF4WEs1Wi9Zc1JvUk1mY1U0c0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSlpXN1VLSUlxb0IvckN3azM0amJ6WnFrOFJpWmh6WENVdmwKOTNTZGp5V21Nd2pBRWhMQzBWL2MxdXVONml6U0xzK2ZRRFVzb09nOXJKdndWTmd0TW9WUFBPbjkvQVJxUnNWRQpReGtpZURtRFZYT1M2MWxFSnJLU2ExQjJlbThZRUdjY3BqWnluU3RMdXJCbnBSK1Vha3FaUVdmNjEzaDhKL3RICmNFUWlJTWEvZyszVHFldHZRakdDOFdGNUpJR0Y3dGJyRU1NZkhPdkZsalBCZXZOYnl4S0FHS1JFb3VJeTZWT1IKV1BRVXlBWEp2bVVDYWRISWdXdkd6R3lERFZFUU5lcGIzbnJrQ1FRaTZ6WHpoMWx2MWFGMWc0NldKbVZmWlJIcAp1Q3ZTSHFyVHlRb0lQL0lFK1hVWVpWZzRsZ1VBNU9xRElpSGdvNFBSUzUvdDY2M2VWV0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.14.0
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.14.0
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzA5MTUxNTA2MThaFw0yNDA5MTQxNTA2MzhaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAENX6bJ/Oh5z2zUo/GAJLnhWgZXQKquhj8OYEfdYCegLsBp3F+RGOUnt5t3sil
            mwQLmrUfHoRSK4VJawRri6qYu6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTA92cD0PSlxdvN+UwRNB3pEnoiOzAKBggqhkjOPQQDAgNIADBFAiEAtgGvzCgX
            jyjWbkjrFZcpMNbzwy87F3j271Xft+faiAcCIEa5nH8lBHh5WeJKPTH/xKg9zTiE
            L+NSPnak+ODsm/od
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzA5MTUxNTA2MThaFw0yNDA5MTQxNTA2MzhaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAENX6bJ/Oh5z2zUo/GAJLnhWgZXQKquhj8OYEfdYCegLsBp3F+RGOUnt5t3sil
      mwQLmrUfHoRSK4VJawRri6qYu6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTA92cD0PSlxdvN+UwRNB3pEnoiOzAKBggqhkjOPQQDAgNIADBFAiEAtgGvzCgX
      jyjWbkjrFZcpMNbzwy87F3j271Xft+faiAcCIEa5nH8lBHh5WeJKPTH/xKg9zTiE
      L+NSPnak+ODsm/od
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.14.0
    networkValidator:
      connectAddr: 1.1.1.1:20001
      enableSecurityContext: true
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.1
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: true
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekE1TVRVeE5UQTJNVGhhRncweU5EQTVNVFF4TlRBMk16aGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVOWDZiSi9PaDV6MnpVby9HQUpMbmhXZ1pYUUtxdWhqOE9ZRWZkWUNlZ0xzQnAzRitSR09VbnQ1dDNzaWwKbXdRTG1yVWZIb1JTSzRWSmF3UnJpNnFZdTZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVEE5MmNEMFBTbHhkdk4rVXdSTkIzcEVub2lPekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBdGdHdnpDZ1gKanlqV2JranJGWmNwTU5iend5ODdGM2oyNzFYZnQrZmFpQWNDSUVhNW5IOGxCSGg1V2VKS1BUSC94S2c5elRpRQpMK05TUG5haytPRHNtL29kCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU1ZRHZxNkxjMVRkRUUvM1NJMzV1WTRJSTJqdVM5RVVBWHNJQ3ZRNWtpbTdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTlg2YkovT2g1ejJ6VW8vR0FKTG5oV2daWFFLcXVoajhPWUVmZFlDZWdMc0JwM0YrUkdPVQpudDV0M3NpbG13UUxtclVmSG9SU0s0Vkphd1JyaTZxWXV3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzA5MTUxNTA2MThaFw0yNDA5MTQxNTA2MzhaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAENX6bJ/Oh5z2zUo/GAJLnhWgZXQKquhj8OYEfdYCegLsBp3F+RGOUnt5t3sil
    mwQLmrUfHoRSK4VJawRri6qYu6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTA92cD0PSlxdvN+UwRNB3pEnoiOzAKBggqhkjOPQQDAgNIADBFAiEAtgGvzCgX
    jyjWbkjrFZcpMNbzwy87F3j271Xft+faiAcCIEa5nH8lBHh5WeJKPTH/xKg9zTiE
    L+NSPnak+ODsm/od
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.0
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.0
        linkerd.io/proxy-version: stable-2.14.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: bd161679fee5acd6732c6c5f4a35f6f5f3b5aeb07facf0a8f29efd3206186928
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.0
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.0
        linkerd.io/proxy-version: stable-2.14.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: bd161679fee5acd6732c6c5f4a35f6f5f3b5aeb07facf0a8f29efd3206186928
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.0
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
spec:
  concurrencyPolicy: Replace
  schedule: "16 15 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.14.0
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.14.0
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.0
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.0
        linkerd.io/proxy-version: stable-2.14.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: bd161679fee5acd6732c6c5f4a35f6f5f3b5aeb07facf0a8f29efd3206186928
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.0
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekE1TVRVeE5UQTJNVGhhRncweU5EQTVNVFF4TlRBMk16aGFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFTlg2YkovT2g1ejJ6VW8vR0FKTG5oV2daWFFLcXVoajhPWUVmZFlDZWdMc0JwM0YrUkdPVW50NXQzc2lsCiAgICAgICAgbXdRTG1yVWZIb1JTSzRWSmF3UnJpNnFZdTZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlRBOTJjRDBQU2x4ZHZOK1V3Uk5CM3BFbm9pT3pBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQXRnR3Z6Q2dYCiAgICAgICAganlqV2JranJGWmNwTU5iend5ODdGM2oyNzFYZnQrZmFpQWNDSUVhNW5IOGxCSGg1V2VKS1BUSC94S2c5elRpRQogICAgICAgIEwrTlNQbmFrK09Ec20vb2QKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSU1ZRHZxNkxjMVRkRUUvM1NJMzV1WTRJSTJqdVM5RVVBWHNJQ3ZRNWtpbTdvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVOWDZiSi9PaDV6MnpVby9HQUpMbmhXZ1pYUUtxdWhqOE9ZRWZkWUNlZ0xzQnAzRitSR09VCiAgICAgICAgbnQ1dDNzaWxtd1FMbXJVZkhvUlNLNFZKYXdScmk2cVl1dz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU16QTVNVFV4TlRBMk1UaGFGdzB5TkRBNU1UUXhOVEEyTXpoYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVOWDZiSi9PaDV6MnpVby9HQUpMbmhXZ1pYUUtxdWhqOE9ZRWZkWUNlZ0xzQnAzRitSR09VbnQ1dDNzaWwKICBtd1FMbXJVZkhvUlNLNFZKYXdScmk2cVl1Nk5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVEE5MmNEMFBTbHhkdk4rVXdSTkIzcEVub2lPekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBdGdHdnpDZ1gKICBqeWpXYmtqckZaY3BNTmJ6d3k4N0YzajI3MVhmdCtmYWlBY0NJRWE1bkg4bEJIaDVXZUpLUFRIL3hLZzl6VGlFCiAgTCtOU1BuYWsrT0RzbS9vZAogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
