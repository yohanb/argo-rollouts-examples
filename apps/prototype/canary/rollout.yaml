apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: canary-web
  annotations:
    argocd.argoproj.io/sync-wave: '90'
    linkerd.io/inject: enabled
spec:
  replicas: 1
  revisionHistoryLimit: 1
  rollbackWindow: # https://argo-rollouts.readthedocs.io/en/stable/features/rollback/
    revisions: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: web
      app.kubernetes.io/name: canary
  template:
    metadata:
      labels:
        app.kubernetes.io/component: web
        app.kubernetes.io/name: canary
      annotations:
        linkerd.io/inject: "enabled"
    spec:
      containers:
      - name: rollouts-demo-web
        image: rollouts-demo-web:latest
        imagePullPolicy: Never
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: 32Mi
            cpu: 5m
#        startupProbe: # sleep between 15 and 30 seconds
#          exec:
#            command:
#              - bash
#              - -c
#              - |-
#                sleep $(( (RANDOM % 1) + 0 ))
          timeoutSeconds: 30
        env:
          - name: API
            value: "canary-api-stable.prototype.svc.cluster.local"
  strategy:
    canary:
      canaryService: canary-web-preview
      stableService: canary-web-stable
      scaleDownDelaySeconds: 3600
      scaleDownDelayRevisionLimit: 1
      trafficRouting:
        smi: {}
      steps:
      - setWeight: 20
      - setCanaryScale: # scale replicaset to 100% with only 20% traffic
          weight: 100
      - pause: {}
      - setWeight: 40
      - pause: {duration: 10}
      - setWeight: 60
      - pause: {duration: 10}
      - setWeight: 80
      - pause: {duration: 10}
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: canary-api
  annotations:
    argocd.argoproj.io/sync-wave: '90'
    linkerd.io/inject: enabled
spec:
  replicas: 10
  revisionHistoryLimit: 1
  rollbackWindow: # https://argo-rollouts.readthedocs.io/en/stable/features/rollback/
    revisions: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: api
      app.kubernetes.io/name: canary
  template:
    metadata:
      labels:
        app.kubernetes.io/component: api
        app.kubernetes.io/name: canary
      annotations:
        linkerd.io/inject: "enabled"
    spec:
      containers:
        - name: rollouts-demo-api
          image: rollouts-demo-api:blue
          imagePullPolicy: Never
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: 32Mi
              cpu: 5m
            #        startupProbe: # sleep between 15 and 30 seconds
            #          exec:
            #            command:
            #              - bash
            #              - -c
            #              - |-
            #                sleep $(( (RANDOM % 1) + 0 ))
            timeoutSeconds: 30
  strategy:
    canary:
      canaryService: canary-api-preview
      stableService: canary-api-stable
      scaleDownDelaySeconds: 3600
      scaleDownDelayRevisionLimit: 1
      trafficRouting:
        smi: {}
      steps:
        - setWeight: 20
        - setCanaryScale: # scale replicaset to 100% with only 20% traffic
            weight: 100
        - pause: {}
        - setWeight: 40
        - pause: {duration: 10}
        - setWeight: 60
        - pause: {duration: 10}
        - setWeight: 80
        - pause: {duration: 10}